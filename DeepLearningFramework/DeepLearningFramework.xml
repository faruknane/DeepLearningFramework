<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DeepLearningFramework</name>
    </assembly>
    <members>
        <member name="T:DeepLearningFramework.Core.Dimension">
            <summary>
            Dynamic Dimension class holds a formula or a value for a dimension.
            </summary>
        </member>
        <member name="P:DeepLearningFramework.Core.Dimension.Value">
            <summary>
            Dimension value initialized to -1.
            </summary>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.#ctor(System.Int32)">
            <param name="val">Initial Value</param>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.op_Implicit(System.Int32)~DeepLearningFramework.Core.Dimension">
            <summary>
            Integer to Dimension conversion.
            </summary>
            <param name="x">Integer Value</param>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.op_Implicit(DeepLearningFramework.Core.Dimension)~System.Int32">
            <summary>
            Dimension to Integer conversion.
            </summary>
            <param name="x">Dimension object</param>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.op_Addition(DeepLearningFramework.Core.Dimension,DeepLearningFramework.Core.Dimension)">
            <summary>
            Add Operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns cref="T:DeepLearningFramework.Core.DimensionAdd">A DimensionPlus object that holds value of a + b</returns>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.op_Multiply(DeepLearningFramework.Core.Dimension,DeepLearningFramework.Core.Dimension)">
            <summary>
            Multiply Operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns cref="T:DeepLearningFramework.Core.DimensionMultiply">A DimensionMultiply object that holds value of a * b</returns>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.op_Division(DeepLearningFramework.Core.Dimension,DeepLearningFramework.Core.Dimension)">
            <summary>
            Divide Operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns cref="T:DeepLearningFramework.Core.DimensionDivide">A DimensionDivide object that holds value of a / b</returns>
        </member>
        <member name="M:DeepLearningFramework.Core.Dimension.op_Subtraction(DeepLearningFramework.Core.Dimension,DeepLearningFramework.Core.Dimension)">
            <summary>
            Subtract Operator.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns cref="T:DeepLearningFramework.Core.DimensionSubtract">A DimensionSubtract object that holds value of a - b</returns>
        </member>
        <member name="T:DeepLearningFramework.Core.DimensionAdd">
            <summary>
            DimensionAdd class helps holding the addition process of two dimensions dynamically.
            </summary>
        </member>
        <member name="T:DeepLearningFramework.Core.DimensionSubtract">
            <summary>
            DimensionSubtract class helps holding the subtraction process of two dimensions dynamically.
            </summary>
        </member>
        <member name="T:DeepLearningFramework.Core.DimensionMultiply">
            <summary>
            DimensionMultiply class helps holding the multiplication process of two dimensions dynamically.
            </summary>
        </member>
        <member name="T:DeepLearningFramework.Core.DimensionDivide">
            <summary>
            DimensionDivide class helps holding the division process of two dimensions dynamically.
            </summary>
        </member>
        <member name="T:DeepLearningFramework.Core.DimensionIncompability">
            <summary>
            DimensionIncompability throws when there is an incompability issue with dimensions or shapes.
            </summary>
        </member>
        <member name="T:DeepLearningFramework.Core.Helper">
            <summary>
            A global helper class that contains many helper classes inside.
            </summary>
        </member>
        <member name="T:DeepLearningFramework.Core.Helper.Id">
            <summary>
            Helps assigning unique identitiy.
            </summary>
        </member>
        <member name="M:DeepLearningFramework.Core.Helper.Id.GetNewId">
            <summary>
            Creates a new identity.
            </summary>
            <returns>New Identitiy</returns>
        </member>
        <member name="T:DeepLearningFramework.Core.Hyperparameters">
            <summary>
            Hyperparameters that are to be used in training session.
            </summary>
        </member>
        <member name="F:DeepLearningFramework.Core.Hyperparameters.LearningRate">
            <summary>
            Learning Rate.
            </summary>
        </member>
        <member name="F:DeepLearningFramework.Core.Hyperparameters.Optimizer">
            <summary>
            Optimizer Method.
            </summary>
        </member>
        <member name="T:DeepLearningFramework.Core.Optimizers.SGD">
            <summary>
            Stochastic Gradient Descent class is an optimizer method derived from VariableOptimizer Interface.
            </summary>
        </member>
        <member name="M:DeepLearningFramework.Core.Optimizers.SGD.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:DeepLearningFramework.Core.Optimizers.SGD.UpdateWeights(DeepLearningFramework.Core.Trainable,PerformanceWork.OptimizedNumerics.Tensor)">
            <summary>
            Updates the weights according to the derivative result.
            </summary>
            <param name="v">Trainable Variable</param>
            <param name="g">Gradient Tensor</param>
            <exception cref="T:DeepLearningFramework.Core.DimensionIncompability">Throws if the shapes of Variable and Gradient are different!</exception>
        </member>
        <member name="T:DeepLearningFramework.Core.Optimizers.VariableOptimizer">
            <summary>
            Optimizer Interface.
            </summary>
        </member>
        <member name="M:DeepLearningFramework.Core.Optimizers.VariableOptimizer.UpdateWeights(DeepLearningFramework.Core.Trainable,PerformanceWork.OptimizedNumerics.Tensor)">
            <summary>
            Weight updating method.
            </summary>
            <param name="v">Trainable Variable</param>
            <param name="g">Gradient Tensor</param>
            <exception cref="T:DeepLearningFramework.Core.DimensionIncompability">Throws if the shapes of Variable and Gradient are different!</exception>
        </member>
        <member name="T:DeepLearningFramework.Core.Trainable">
            <summary>
            Trainable interface helps to create a trainable object that is sent to optimizers.
            </summary>
        </member>
        <member name="P:DeepLearningFramework.Core.Trainable.Trainable">
            <summary>
            The current statue of the Trainable.
            </summary>
        </member>
        <member name="P:DeepLearningFramework.Core.Trainable.LearningRateMultiplier">
            <summary>
            Additional Learning Rate of the Trainable.
            </summary>
        </member>
        <member name="P:DeepLearningFramework.Core.Trainable.Weights">
            <summary>
            Weights or data that is to be trained.
            </summary>
        </member>
        <member name="P:DeepLearningFramework.Core.Trainable.UniqueId">
            <summary>
            Unique Id.
            </summary>
        </member>
        <member name="M:DeepLearningFramework.Operators.Layers.Input.SetInput(PerformanceWork.OptimizedNumerics.Tensor)">
            <summary>
            <br>the new data will be assigned.</br>
            </summary>
            
            
            <code>
            var x = new Input(size);
            Tensor&lt;float&gt; data = new Tensor&lt;float&gt;((.....));
            x.SetInput(data);
            </code>
            <param name="inp">The new input data</param>
        </member>
        <member name="M:DeepLearningFramework.Operators.Terms.Expand.#ctor(DeepLearningFramework.Operators.Terms.Term,PerformanceWork.OptimizedNumerics.Shape)">
            <summary>
            Shape object wont be returned to the pool
            </summary>
        </member>
    </members>
</doc>
